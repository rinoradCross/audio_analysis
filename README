Download and Installation:
git clone https://github.com/tyiannak/pyAudioAnalysis.git
sudo pip install -r requirements.txt


 * * * * * * * * * * * * * * * * * * 
 RECORD AUDIO SEGMENTS
 * * * * * * * * * * * * * * * * * * 

Function: recordAudioSegments(RecordPath, BLOCKSIZE) of audioAnalysis.py

Command-line use:
python audioAnalysis.py -recordSegments "rSpeech" 2.0

 * * * * * * * * * * * * * * * * * * 
 REALTIME FIXED SEGMENT RECORDING AND CLASSIFICATION
 * * * * * * * * * * * * * * * * * * 

Function: recordAnalyzeAudio(duration, outputWavFile, midTermBufferSizeSec, modelName, modelType)

Command-line use:
python audioAnalysis.py -recordAndClassifySegments 20 out.wav knnRecNoiseActivity knn

 * * * * * * * * * * * * * * * * * * 
 Train Segment Classifier From Data
 * * * * * * * * * * * * * * * * * * 

Basic function: featureAndTrain()  from audioTrainTest.py

Example:
import audioTrainTest as aT
aT.featureAndTrain(["/home/tyiannak/Desktop/MusicGenre/Classical/","/home/tyiannak/Desktop/MusicGenre/Electronic/","/home/tyiannak/Desktop/MusicGenre/Jazz/"], 1.0, 1.0, aT.shortTermWindow, aT.shortTermStep, "svm", "svmMusicGenre3")
aT.featureAndTrain(["/home/tyiannak/Desktop/MusicGenre/Classical/","/home/tyiannak/Desktop/MusicGenre/Electronic/","/home/tyiannak/Desktop/MusicGenre/Jazz/"], 1.0, 1.0, aT.shortTermWindow, aT.shortTermStep, "knn", "knnMusicGenre3")

aT.featureAndTrain(["/home/tyiannak/Desktop/5Class/Silence/","/home/tyiannak/Desktop/5Class/SpeechMale/","/home/tyiannak/Desktop/5Class/SpeechFemale/","/home/tyiannak/Desktop/5Class/ObjectsOther/","/home/tyiannak/Desktop/5Class/Music/"], 1.0, 1.0, aT.shortTermWindow, aT.shortTermStep, "svm", "svm5Classes")
aT.featureAndTrain(["/home/tyiannak/Desktop/5Class/Silence/","/home/tyiannak/Desktop/5Class/SpeechMale/","/home/tyiannak/Desktop/5Class/SpeechFemale/","/home/tyiannak/Desktop/5Class/ObjectsOther/","/home/tyiannak/Desktop/5Class/Music/"], 1.0, 1.0, aT.shortTermWindow, aT.shortTermStep, "knn", "knn5Classes")

Command-line use:
python audioAnalysis.py -trainClassifier <method(svm or knn)> <directory 1> <directory 2> ... <directory N> <modelName>

Examples:
python audioAnalysis.py -trainClassifier svm /home/tyiannak/Desktop/SpeechMusic/music /home/tyiannak/Desktop/SpeechMusic/speech svmSM
python audioAnalysis.py -trainClassifier knn /home/tyiannak/Desktop/ /home/tyiannak/Desktop/SpeechMusic/speech knnSM
python audioAnalysis.py -trainClassifier knn /home/tyiannak/Desktop/MusicGenre/Classical/ /home/tyiannak/Desktop/MusicGenre/Electronic/ /home/tyiannak/Desktop/MusicGenre/Jazz/  knnMusicGenre3
python audioAnalysis.py -trainClassifier svm /home/tyiannak/Desktop/MusicGenre/Classical/ /home/tyiannak/Desktop/MusicGenre/Electronic/ /home/tyiannak/Desktop/MusicGenre/Jazz/  svmMusicGenre3

 * * * * * * * * * * * * * * * * * * 
     Single File Classification
 * * * * * * * * * * * * * * * * * * 
Basic function: fileClassification from audioTrainTest library
Example:
import audioTrainTest as aT
aT.fileClassification("TrueFaith.wav", "svmMusicGenre3","svm")

Command-line use:
python audioAnalysis.py -classifyFile <method(svm or knn)> <modelName> <fileName>

Examples:
python audioAnalysis.py -classifyFile knn knnSM TrueFaith.wav
python audioAnalysis.py -classifyFile knn knnMusicGenre3 TrueFaith.wav
python audioAnalysis.py -classifyFile svm svmMusicGenre3 TrueFaith.wav

 * * * * * * * * * * * * * * * * * * 
     Folder Classification
 * * * * * * * * * * * * * * * * * * 
Classifies each WAV file found in the given folder and generates stdout resutls:
Examples:
python audioAnalysis.py -classifyFolder svm svmSM RecSegments/Speech/ 0 (only generates freq counts for each audio class)
python audioAnalysis.py -classifyFolder svm svmSM RecSegments/Speech/ 1 (also outputs the result of each singe WAV file)


 * * * * * * * * * * * * * * * * * * 
  File Segmentation & Classification
 * * * * * * * * * * * * * * * * * * 
Basic function: mtFileClassification
Example:
import audioSegmentation as aS
[segs, classes] = aS.mtFileClassification("speech_music_sample.wav", "svmSM", "svm", True)

Command-line use:
python audioAnalysis.py -segmentClassifyFile <method(svm or knn)> <modelName> <fileName>
Example:
python audioAnalysis.py -segmentClassifyFile svm svmSM speech_music_sample.wav

 * * * * * * * * * * * * * * * * * * 
        Audio thumbnailing
 * * * * * * * * * * * * * * * * * * 
Basic function: musicThumbnailing() in audioSegmentation.py
Also uses selfSimilarityMatrix() in audioSegmentation.py

Command-line use:
python audioAnalysis.py -thumbnail <wavFileName> <thumbnailDuration>

Uses <wavFileName> as input music track and generates two thumbnails of <thumbnailDuration> length.
Also, results are written in two wav files <wavFileName>_thumb1.wav and <wavFileName>_thumb2.wav
